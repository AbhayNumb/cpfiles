public boolean isBipartite(int V, ArrayList<ArrayList<Integer>>adj){
    // Code here
    int[]levels=new int[V];
    Arrays.fill(levels,-1);
    for(int i=0;i<V;i++){
        if(levels[i]==-1){
            boolean chk=bfscheck(adj,i,levels);
            if(chk==false){
                return false;
            }
        }
   }
    return true;
}
public boolean bfscheck(ArrayList<ArrayList<Integer>>adj,int node,int []levels){
    Queue<Integer>qu=new ArrayDeque<>();
    qu.add(node);
    levels[node]=1;
    while(qu.size()!=0){
        int rem=qu.remove();
        for(int it:adj.get(rem)){
            if(levels[it]==-1){
                levels[it]=1-levels[rem];
                qu.add(it);
            }else if(levels[it]==levels[rem]){
                return false;
            }
        }
    }
    return true;
}