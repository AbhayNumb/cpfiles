//A vertex is said to be an articulation point in a graph if removal of the vertex and associated edges disconnects the graph.
public ArrayList<Integer> articulationPoints(int V,ArrayList<ArrayList<Integer>> adj){
    boolean[]vis=new boolean[V];
    boolean[]mark=new boolean[V];
    int[]tin=new int[V];
    int[]low=new int[V];
    ArrayList<Integer>ans=new ArrayList<>();
    dfs(0,-1,adj,vis,mark,tin,low);
    
    for(int i=0;i<mark.length;i++){
        if(mark[i]){
            ans.add(i);
         }
    }
    if(ans.size()==0){
        ans.add(-1);
    }
    return ans;
}
static int timer=1;
public void dfs(int node,int par,ArrayList<ArrayList<Integer>> adj,boolean[]vis,boolean[]mark,int[]tin,int[]low){
    vis[node]=true;
    tin[node]=timer;
    low[node]=timer;
    int child=0;
    timer++;
    for(int it:adj.get(node)){
        if(it==par){
            continue;
        }
        if(vis[it]==false){
            dfs(it,node,adj,vis,mark,tin,low);
            low[node]=Math.min(low[node],low[it]);
            if(low[it]>=tin[node] && par!=-1){
                mark[node]=true;
            }
            child++;
        }else{
            low[node]=Math.min(low[node],tin[it]);
       }
        
    }
    // System.out.println(node+" "+child);
    if(child>1 && par==-1 ){
        mark[node]=true;
    }
}